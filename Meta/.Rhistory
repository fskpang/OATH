####data illustration
#compare coef
plot(
B, Sreg, xlab = "OATH", ylab = "Saturated", bty =
'n', main = "", col=COL[c(1, md[,j]+1)], pch =
16, cex = 2, xlim=c(-0.2, 0.2), ylim=c(-0.2, 0.2)
)
#compare coef sd
for (k in 1:nrow(B))
{
lines(x = c(B[k,1] - SigmaB[k], B[k,1] + SigmaB[k]), y = c(B[k,1], B[k,1]))
}
for (k in 1:nrow(B))
{
lines(y = c(Sreg[k] - Ssd[k], Sreg[k] + Ssd[k]), x = c(Sreg[k], Sreg[k]))
}
#reference line
abline(a = 0, b = 1, lty = 2)
}
}
}
plot.new()
legend(
"topleft", legend = c("Locus", "Cov 1", "Cov 2", "Cov 3"), col = COL, pch =
16, bty = 'n'
)
var(y)
var(Y)
Y
t(Y) %*%(Y)
Phi
set.seed(2016)
par(ps=10)
M = 3 #covariates
N = 200 #sample size
COL = c("red", "pink", "blue", "green")
#simu cov and phe
X = matrix(rnorm(M * N), nrow = N, ncol = M) #cov
Y = matrix(rnorm(N), nrow = N, ncol = 1) #phenotype
#standardization
X = apply(X, MARGIN = 2, scale)
Y = scale(Y)
#generic nss
Phi = cov(cbind(Y,X))
#simu loci
LC = 1
frq = runif(LC, 0, 0.5)
mk = matrix(0, nrow = N, ncol = LC)
for (i in 1:LC)
{
mk[,i] = rbinom(N, 2, frq[i])
}
layout(matrix(c(1:9), 3, 3))
#OATH vs sgwas
BETAmat = matrix(0, nrow = LC, ncol = 2)
for (IDX in 1:LC)
{
cv = var(X)
varMK = var(mk[,IDX])
#locus-specific nss
mmod = lm(Y ~ mk[,IDX])
nss1 = lm(X[,1] ~ mk[,IDX])
nss2 = lm(X[,2] ~ mk[,IDX])
nss3 = lm(X[,3] ~ mk[,IDX])
#A
A = c(summary(mmod)$coefficient[2,1],
Phi[1,2] / Phi[2,2], Phi[1,3] / Phi[3,3], Phi[1,4] / Phi[4,4])
#Lambda matrix
Lam = matrix(0, M + 1, M + 1)
for (i in 1:M)
{
Lam[i + 1, 2:(M + 1)] = cv[i,]
}
Lam[1,1] = varMK
Lam[1, 2] = Lam[2,1] = varMK * summary(nss1)$coefficient[2,1]
Lam[1, 3] = Lam[3,1] = varMK * summary(nss2)$coefficient[2,1]
Lam[1, 4] = Lam[4,1] = varMK * summary(nss3)$coefficient[2,1]
#Omega matrix
Omega = matrix(0, nrow = nrow(Lam), ncol = ncol(Lam))
diag(Omega) = diag(Lam)
for (i in 1:M)
{
md = combn(M, i)
for (j in 1:ncol(md))
{
xx = X[, md[,j]]
smod = lm(Y ~ mk[,IDX] + xx)
Sreg = summary(smod)$coefficients[2:(length(md[,j]) + 2),1] #partial reg coef
Ssd = summary(smod)$coefficients[2:(length(md[,j]) + 2),2] #partial reg coef sd
#joint estimate via OATH
lam = Lam[c(1, md[,j]+1), c(1, md[,j]+1)]
omega = Omega[c(1, md[,j]+1), c(1, md[,j]+1)]
a = A[c(1, md[,j]+1)]
B = solve(lam) %*% omega %*% a
SigmaB = sqrt(diag((Phi[1,1]*n - t(B) %*% omega %*% a)[1,1] * solve(lam) / (N - nrow(lam))))
####data illustration
#compare coef
plot(
B, Sreg, xlab = "OATH", ylab = "Saturated", bty =
'n', main = "", col=COL[c(1, md[,j]+1)], pch =
16, cex = 2, xlim=c(-0.2, 0.2), ylim=c(-0.2, 0.2)
)
#compare coef sd
for (k in 1:nrow(B))
{
lines(x = c(B[k,1] - SigmaB[k], B[k,1] + SigmaB[k]), y = c(B[k,1], B[k,1]))
}
for (k in 1:nrow(B))
{
lines(y = c(Sreg[k] - Ssd[k], Sreg[k] + Ssd[k]), x = c(Sreg[k], Sreg[k]))
}
#reference line
abline(a = 0, b = 1, lty = 2)
}
}
}
plot.new()
legend(
"topleft", legend = c("Locus", "Cov 1", "Cov 2", "Cov 3"), col = COL, pch =
16, bty = 'n'
)
set.seed(2016)
par(ps=10)
M = 3 #covariates
N = 200 #sample size
COL = c("red", "pink", "blue", "green")
#simu cov and phe
X = matrix(rnorm(M * N), nrow = N, ncol = M) #cov
Y = matrix(rnorm(N), nrow = N, ncol = 1) #phenotype
#standardization
X = apply(X, MARGIN = 2, scale)
Y = scale(Y)
#generic nss
Phi = cov(cbind(Y,X))
#simu loci
LC = 1
frq = runif(LC, 0, 0.5)
mk = matrix(0, nrow = N, ncol = LC)
for (i in 1:LC)
{
mk[,i] = rbinom(N, 2, frq[i])
}
layout(matrix(c(1:9), 3, 3))
#OATH vs sgwas
BETAmat = matrix(0, nrow = LC, ncol = 2)
for (IDX in 1:LC)
{
cv = var(X)
varMK = var(mk[,IDX])
#locus-specific nss
mmod = lm(Y ~ mk[,IDX])
nss1 = lm(X[,1] ~ mk[,IDX])
nss2 = lm(X[,2] ~ mk[,IDX])
nss3 = lm(X[,3] ~ mk[,IDX])
#A
A = c(summary(mmod)$coefficient[2,1],
Phi[1,2] / Phi[2,2], Phi[1,3] / Phi[3,3], Phi[1,4] / Phi[4,4])
#Lambda matrix
Lam = matrix(0, M + 1, M + 1)
for (i in 1:M)
{
Lam[i + 1, 2:(M + 1)] = cv[i,]
}
Lam[1,1] = varMK
Lam[1, 2] = Lam[2,1] = varMK * summary(nss1)$coefficient[2,1]
Lam[1, 3] = Lam[3,1] = varMK * summary(nss2)$coefficient[2,1]
Lam[1, 4] = Lam[4,1] = varMK * summary(nss3)$coefficient[2,1]
#Omega matrix
Omega = matrix(0, nrow = nrow(Lam), ncol = ncol(Lam))
diag(Omega) = diag(Lam)
for (i in 1:M)
{
md = combn(M, i)
for (j in 1:ncol(md))
{
xx = X[, md[,j]]
smod = lm(Y ~ mk[,IDX] + xx)
Sreg = summary(smod)$coefficients[2:(length(md[,j]) + 2),1] #partial reg coef
Ssd = summary(smod)$coefficients[2:(length(md[,j]) + 2),2] #partial reg coef sd
#joint estimate via OATH
lam = Lam[c(1, md[,j]+1), c(1, md[,j]+1)]
omega = Omega[c(1, md[,j]+1), c(1, md[,j]+1)]
a = A[c(1, md[,j]+1)]
B = solve(lam) %*% omega %*% a
SigmaB = sqrt(diag((Phi[1,1]*N - t(B) %*% omega %*% a)[1,1] * solve(lam) / (N - nrow(lam))))
####data illustration
#compare coef
plot(
B, Sreg, xlab = "OATH", ylab = "Saturated", bty =
'n', main = "", col=COL[c(1, md[,j]+1)], pch =
16, cex = 2, xlim=c(-0.2, 0.2), ylim=c(-0.2, 0.2)
)
#compare coef sd
for (k in 1:nrow(B))
{
lines(x = c(B[k,1] - SigmaB[k], B[k,1] + SigmaB[k]), y = c(B[k,1], B[k,1]))
}
for (k in 1:nrow(B))
{
lines(y = c(Sreg[k] - Ssd[k], Sreg[k] + Ssd[k]), x = c(Sreg[k], Sreg[k]))
}
#reference line
abline(a = 0, b = 1, lty = 2)
}
}
}
plot.new()
legend(
"topleft", legend = c("Locus", "Cov 1", "Cov 2", "Cov 3"), col = COL, pch =
16, bty = 'n'
)
set.seed(2016)
par(ps=10)
M = 3 #covariates
N = 200 #sample size
COL = c("red", "pink", "blue", "green")
#simu cov and phe
X = matrix(rnorm(M * N), nrow = N, ncol = M) #cov
Y = matrix(rnorm(N), nrow = N, ncol = 1) #phenotype
#standardization
X = apply(X, MARGIN = 2, scale)
Y = scale(Y)
#generic nss
Phi = cov(cbind(Y,X))
#simu loci
LC = 1
frq = runif(LC, 0, 0.5)
mk = matrix(0, nrow = N, ncol = LC)
for (i in 1:LC)
{
mk[,i] = rbinom(N, 2, frq[i])
}
layout(matrix(c(1:9), 3, 3))
#OATH vs sgwas
BETAmat = matrix(0, nrow = LC, ncol = 2)
for (IDX in 1:LC)
{
cv = var(X)
varMK = var(mk[,IDX])
#locus-specific nss
mmod = lm(Y ~ mk[,IDX])
nss1 = lm(X[,1] ~ mk[,IDX])
nss2 = lm(X[,2] ~ mk[,IDX])
nss3 = lm(X[,3] ~ mk[,IDX])
#A
A = c(summary(mmod)$coefficient[2,1],
Phi[1,2] / Phi[2,2], Phi[1,3] / Phi[3,3], Phi[1,4] / Phi[4,4])
#Lambda matrix
Lam = matrix(0, M + 1, M + 1)
for (i in 1:M)
{
Lam[i + 1, 2:(M + 1)] = cv[i,]
}
Lam[1,1] = varMK
Lam[1, 2] = Lam[2,1] = varMK * summary(nss1)$coefficient[2,1]
Lam[1, 3] = Lam[3,1] = varMK * summary(nss2)$coefficient[2,1]
Lam[1, 4] = Lam[4,1] = varMK * summary(nss3)$coefficient[2,1]
#Omega matrix
Omega = matrix(0, nrow = nrow(Lam), ncol = ncol(Lam))
diag(Omega) = diag(Lam)
for (i in 1:M)
{
md = combn(M, i)
for (j in 1:ncol(md))
{
xx = X[, md[,j]]
smod = lm(Y ~ mk[,IDX] + xx)
Sreg = summary(smod)$coefficients[2:(length(md[,j]) + 2),1] #partial reg coef
Ssd = summary(smod)$coefficients[2:(length(md[,j]) + 2),2] #partial reg coef sd
#joint estimate via OATH
lam = Lam[c(1, md[,j]+1), c(1, md[,j]+1)]
omega = Omega[c(1, md[,j]+1), c(1, md[,j]+1)]
a = A[c(1, md[,j]+1)]
B = solve(lam) %*% omega %*% a
SigmaB = sqrt(diag((Phi[1,1] - t(B) %*% omega %*% a)[1,1] * solve(lam) / (N - nrow(lam))))
####data illustration
#compare coef
plot(
B, Sreg, xlab = "OATH", ylab = "Saturated", bty =
'n', main = "", col=COL[c(1, md[,j]+1)], pch =
16, cex = 2, xlim=c(-0.2, 0.2), ylim=c(-0.2, 0.2)
)
#compare coef sd
for (k in 1:nrow(B))
{
lines(x = c(B[k,1] - SigmaB[k], B[k,1] + SigmaB[k]), y = c(B[k,1], B[k,1]))
}
for (k in 1:nrow(B))
{
lines(y = c(Sreg[k] - Ssd[k], Sreg[k] + Ssd[k]), x = c(Sreg[k], Sreg[k]))
}
#reference line
abline(a = 0, b = 1, lty = 2)
}
}
}
plot.new()
legend(
"topleft", legend = c("Locus", "Cov 1", "Cov 2", "Cov 3"), col = COL, pch =
16, bty = 'n'
)
Ssd
smod
summary(Sreg)
summary(Sreg)
summary(smod)
a
homedir=getwd()
source("oathPlot.R")
#analysis for LowMgS
if(!dir.exists("LowMgS"))
{
dir.create("LowMgS")
}
setwd("LowMgS")
cmdLowMgSnns=paste("java -jar ../gear.jar  nss --bfile ../ArabData/Arab295Line --pheno ../ArabData/Arab295Line.phe --mpheno 11 --covar ../ArabData/Arab295Line.eigenvec --covar-number 1 2 3 4 5 --out Arab295Line_LowMgS")
system(cmdLowMgSnns)
cmdLowMgSoathX=paste("java -jar ../gear.jar  oathX --nss-batch Arab295Line_LowMgS.list.nss --cm Arab295Line_LowMgS.m.nss --n 295 --out Arab295Line_LowMgS")
system(cmdLowMgSoathX)
system("grep 3_8965883 *LowMgS*.oath > 3_8965883LowMgS.txt")
oathPlot("5_20010406HighMgK.txt", 156744, 0.05)
#analysis for HighMgRGT
setwd(homedir)
if(!dir.exists("HighMgRGT"))
{
dir.create("HighMgRGT")
}
setwd("HighMgRGT")
cmdHighMgRGTnns=paste("java -jar ../gear.jar  nss --bfile ../ArabData/Arab295Line --pheno ../ArabData/Arab295Line.phe --mpheno 29 --covar ../ArabData/Arab295Line.eigenvec --covar-number 1 2 3 4 5 --out Arab295Line_HighMgRGT")
system(cmdHighMgRGTnns)
cmdHighMgRGToathX=paste("java -jar ../gear.jar  oathX --nss-batch Arab295Line_HighMgRGT.list.nss --cm Arab295Line_HighMgRGT.m.nss --n 295 --out Arab295Line_HighMgRGT")
system(cmdHighMgRGToathX)
system("grep 4_6353940 *HighMgRGT*.oath > 4_6353940HighMgRGT.txt")
oathPlot("5_20010406HighMgK.txt", 156744, 0.05)
#analysis for HighMgK
setwd(homedir)
if(!dir.exists("HighMGK"))
{
dir.create("HighMgK")
}
setwd("HighMgK")
cmdHighMgKnns=paste("java -jar ../gear.jar  nss --bfile ../ArabData/Arab295Line --pheno ../ArabData/Arab295Line.phe --mpheno 36 --covar ../ArabData/Arab295Line.eigenvec --covar-number 1 2 3 4 5 --out Arab295Line_HighMgK")
system(cmdHighMgKnns)
cmdHighMgKoathX=paste("java -jar ../gear.jar  oathX --nss-batch Arab295Line_HighMgK.list.nss --cm Arab295Line_HighMgK.m.nss --n 295 --out Arab295Line_HighMgK")
system(cmdHighMgKoathX)
system("grep 5_20010406 *HighMgK*.oath > 5_20010406HighMgK.txt")
oathPlot("5_20010406HighMgK.txt", 156744, 0.05)
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis")
homedir=getwd()
source("oathPlot.R")
#analysis for LowMgS
if(!dir.exists("LowMgS"))
{
dir.create("LowMgS")
}
setwd("LowMgS")
cmdLowMgSnns=paste("java -jar ../gear.jar  nss --bfile ../ArabData/Arab295Line --pheno ../ArabData/Arab295Line.phe --mpheno 11 --covar ../ArabData/Arab295Line.eigenvec --covar-number 1 2 3 4 5 --out Arab295Line_LowMgS")
system(cmdLowMgSnns)
cmdLowMgSoathX=paste("java -jar ../gear.jar  oathX --nss-batch Arab295Line_LowMgS.list.nss --cm Arab295Line_LowMgS.m.nss --n 295 --out Arab295Line_LowMgS")
system(cmdLowMgSoathX)
system("grep 3_8965883 *LowMgS*.oath > 3_8965883LowMgS.txt")
oathPlot("5_20010406HighMgK.txt", 156744, 0.05)
#analysis for HighMgRGT
setwd(homedir)
if(!dir.exists("HighMgRGT"))
{
dir.create("HighMgRGT")
}
setwd("HighMgRGT")
cmdHighMgRGTnns=paste("java -jar ../gear.jar  nss --bfile ../ArabData/Arab295Line --pheno ../ArabData/Arab295Line.phe --mpheno 29 --covar ../ArabData/Arab295Line.eigenvec --covar-number 1 2 3 4 5 --out Arab295Line_HighMgRGT")
system(cmdHighMgRGTnns)
cmdHighMgRGToathX=paste("java -jar ../gear.jar  oathX --nss-batch Arab295Line_HighMgRGT.list.nss --cm Arab295Line_HighMgRGT.m.nss --n 295 --out Arab295Line_HighMgRGT")
system(cmdHighMgRGToathX)
system("grep 4_6353940 *HighMgRGT*.oath > 4_6353940HighMgRGT.txt")
oathPlot("5_20010406HighMgK.txt", 156744, 0.05)
#analysis for HighMgK
setwd(homedir)
if(!dir.exists("HighMGK"))
{
dir.create("HighMgK")
}
setwd("HighMgK")
cmdHighMgKnns=paste("java -jar ../gear.jar  nss --bfile ../ArabData/Arab295Line --pheno ../ArabData/Arab295Line.phe --mpheno 36 --covar ../ArabData/Arab295Line.eigenvec --covar-number 1 2 3 4 5 --out Arab295Line_HighMgK")
system(cmdHighMgKnns)
cmdHighMgKoathX=paste("java -jar ../gear.jar  oathX --nss-batch Arab295Line_HighMgK.list.nss --cm Arab295Line_HighMgK.m.nss --n 295 --out Arab295Line_HighMgK")
system(cmdHighMgKoathX)
system("grep 5_20010406 *HighMgK*.oath > 5_20010406HighMgK.txt")
oathPlot("5_20010406HighMgK.txt", 156744, 0.05)
homedir=getwd()
setwd("LowMgS")
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis")
setwd("LowMgS")
oathPlot("3_8965883LowMgS.txt", 156744, 0.05)
setwd(homedir)
setwd("HighMgRGT")
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis")
getSrcDirectory()
help("getSrcDirectory")
getSrcLocation(oathPlot
)
getSrcLocation(oathPlot)
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis")
setwd("HighMgRGT")
oathPlot("4_6353940HighMgRGT.txt", 156744, 0.05)
View(oathPlot)
View(oathPlot)
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis")
setwd("HighMgRGT")
oathPlot("4_6353940HighMgRGT.txt", 156744, 0.05, "4_6353940HighMgRGT.pdf")
View(oathPlot)
View(oathPlot)
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis")
homedir=getwd()
source("oathPlot.R")
setwd("LowMgS")
oathPlot("3_8965883LowMgS.txt", 156744, 0.05, "3_8965883LowMgS.pdf")
setwd(homedir)
setwd("HighMgRGT")
oathPlot("4_6353940HighMgRGT.txt", 156744, 0.05, "4_6353940HighMgRGT.pdf")
setwd(homedir)
setwd("HighMgK")
oathPlot("5_20010406HighMgK.txt", 156744, 0.05, "5_20010406HighMgK.pdf")
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis/Meta")
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis/Meta")
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis")
#oathX for naCohort
if(!dir.exists("./Meta/NAcohortOATH"))
{
dir.create("./Meta/NAcohortOATH")
}
cmd1=paste0("java -jar ../gear.jar oathX --nss-batch ./Meta/NAcohortNSS/Na.chr1.nss.list.nss --cm ./Meta/NAcohortNSS/Na.chr1.nss.m.nss --n 3191 --out ./Meta/NAcohortOATH/Na_md")
print(cmd1)
system(cmd1)
#oathX for sleCohort
if(!dir.exists("./Meta/SLEcohortOATH"))
{
dir.create("./Meta/SLEcohortOATH")
}
cmd2=paste0("java -jar ../gear.jar oathX --nss-batch ./Meta/SLEcohortNSS/sle.chr1.nss.list.nss --cm ./Meta/SLEcohortNSS/sle.chr1.nss.m.nss --n 2309 --out ./Meta/SLEcohortOATH/sle_md")
print(cmd2)
system(cmd2)
#oathX for naCohort
if(!dir.exists("./Meta/NAcohortOATH"))
{
dir.create("./Meta/NAcohortOATH")
}
cmd1=paste0("java -jar gear.jar oathX --nss-batch ./Meta/NAcohortNSS/Na.chr1.nss.list.nss --cm ./Meta/NAcohortNSS/Na.chr1.nss.m.nss --n 3191 --out ./Meta/NAcohortOATH/Na_md")
print(cmd1)
system(cmd1)
#oathX for sleCohort
if(!dir.exists("./Meta/SLEcohortOATH"))
{
dir.create("./Meta/SLEcohortOATH")
}
cmd2=paste0("java -jar gear.jar oathX --nss-batch ./Meta/SLEcohortNSS/sle.chr1.nss.list.nss --cm ./Meta/SLEcohortNSS/sle.chr1.nss.m.nss --n 2309 --out ./Meta/SLEcohortOATH/sle_md")
print(cmd2)
system(cmd2)
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis")
cmd1=paste0("java -jar gear.jar oathX --nss-batch ./Meta/NAcohortNSS/Na.chr1.nss.list.nss --cm ./Meta/NAcohortNSS/Na.chr1.nss.m.nss --n 3191 --out ./Meta/NAcohortOATH/Na_md")
print(cmd1)
system(cmd1)
#oathX for naCohort
if(!dir.exists("./Meta/NAcohortOATH"))
{
dir.create("./Meta/NAcohortOATH")
}
setwd("./Meta/NAcohortNSS/")
cmd1=paste0("java -jar gear.jar oathX --nss-batch Na.chr1.nss.list.nss --cm Na.chr1.nss.m.nss --n 3191 --out ../NAcohortOATH/Na_md")
print(cmd1)
system(cmd1)
#oathX for naCohort
if(!dir.exists("./Meta/NAcohortOATH"))
{
dir.create("./Meta/NAcohortOATH")
}
setwd("./Meta/NAcohortNSS/")
cmd1=paste0("java -jar ../../gear.jar oathX --nss-batch Na.chr1.nss.list.nss --cm Na.chr1.nss.m.nss --n 3191 --out ../NAcohortOATH/Na_md")
print(cmd1)
system(cmd1)
#oathX for sleCohort
if(!dir.exists("./Meta/SLEcohortOATH"))
{
dir.create("./Meta/SLEcohortOATH")
}
cmd2=paste0("java -jar ../../gear.jar oathX --nss-batch sle.chr1.nss.list.nss --cm sle.chr1.nss.m.nss --n 2309 --out ./Meta/SLEcohortOATH/sle_md")
print(cmd2)
system(cmd2)
setwd("~/manuscript/OpenGWAS/writeup/G3/ReviewDec/ArabAnalysis/Meta")
#oathX for naCohort
cmd1=paste0("java -jar ../gear.jar oathX --nss-batch Na.chr1.nss.list.nss --cm Na.chr1.nss.m.nss --n 3191 --out Na_md")
print(cmd1)
system(cmd1)
#oathX for sleCohort
cmd2=paste0("java -jar ../gear.jar oathX --nss-batch sle.chr1.nss.list.nss --cm sle.chr1.nss.m.nss --n 2309 --out sle_md")
print(cmd2)
system(cmd2)
#meta-analysis
for (i in 1:7)
{
cmdMeta=paste0("java -jar ../gear.jar gmeta --meta-batch meta", i, ".txt --qt 3191 2309 --out meta", i)
print(cmdMeta)
system(cmdMeta)
}
par(ps=9)
mn=c("s={1}", "s={2}", "s={3}", "s={1,2}", "s={1,3}", "s={2,3}", "s={1,2,3}")
layout(matrix(1:8, 2, 4, byrow = T))
for(i in 1:7)
{
gm=read.table(paste0("meta", i,".gmeta"), as.is=T, header=T)
plot(main=mn[i], -log10(gm$P), xlab="Chr 1", pch=16, cex=0.5, bty='n', ylab=expression(-log[10](italic(p))))
abline(h=-log10(0.05/nrow(gm)), lty=2)
}
